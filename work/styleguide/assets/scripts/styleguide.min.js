var transitionExample = function(examples) {
  var items = document.querySelectorAll(examples);

  for (var i = 0; i < items.length; i++ ) {
    items[i].addEventListener('click', click, false);
  }

  function click(event) {
    var transform = this.style.transform;
    if (transform) {
      var minus = transform.indexOf('50');
      if (minus !== -1) {
        this.style['transform'] = 'translateX(0px)';
      } else {
        this.style['transform'] = 'translateX(50px)';
      }
    } else {
      this.style['transform'] = 'translateX(50px)';
    }

  }
}

transitionExample('.styleguide-transition .example div');

var ulNested = function(toggler) {
  var triggers = document.querySelectorAll(toggler);

  // First item is always active
  triggers[0].classList.toggle('active');

  function onViewChange(event) {
    this.classList.toggle('active');
    event.stopPropagation();
  }

  for (var i = 0; i < triggers.length; i++ ) {
    triggers[i].addEventListener('click', onViewChange, false);
  }
}

var menuActive = function(menuItems) {
  var htmlClassList = document.querySelector('html').classList;
  var items = document.querySelectorAll(menuItems);

  for (var i = 0; i < items.length; i++ ) {
    var itemTitle = items[i].children[0].children[0].getAttribute('title').replace(/\s+/g, '-').toLowerCase();

    if (htmlClassList.contains('styleguide-' + itemTitle)) {
      items[i].classList.add('inactive');
      makeParentsActive(items[i]);
    }
  }

  function makeParentsActive(element) {
    while (element) {
      if (element.classList.contains('folder')) {
        element.classList.add('active');
      }
      element = element.parentNode;
    }
  }
}



ulNested('.styleguide-menu__framework li');
ulNested('.styleguide-menu__project li');

menuActive('.styleguide-menu__framework li.file');
menuActive('.styleguide-menu__project li.file');

var cloneParagraph = function(paragraph) {
  var p = document.querySelector(paragraph);
  var rect = p.getBoundingClientRect();
  var clone = p.cloneNode(true);

  clone.style.top = rect.top + 'px';
  clone.style.left = rect.left + 'px';
  clone.classList.add('cloned');

  var body = document.querySelector('body');
  body.appendChild(clone);

  // If the paragraph is already rotated the 'rect' position values are incorrect
  // - 1. get the parapgraph position
  // - 2. assign to the clone
  // - 3. rotate the paragraph
  p.classList.add('rotated');
}


cloneParagraph('.styleguide-home .intro__description .bordered');
